{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Praveen\\\\EcoChamps\\\\client\\\\src\\\\pages\\\\ProfilePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUserProfile, getBadges } from '../services/apiService';\nimport { getToken } from '../services/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [allBadges, setAllBadges] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const userId = getToken();\n  useEffect(() => {\n    if (!userId) {\n      navigate('/login');\n      return;\n    }\n    const fetchData = async () => {\n      try {\n        const profileData = await getUserProfile(userId);\n        const badgesData = await getBadges();\n        setUser(profileData);\n        setAllBadges(badgesData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [userId, navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: \"Loading profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-5\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: \"User not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  const earnedBadgeDetails = allBadges.filter(badge => user.earnedBadges.includes(badge.id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Level: \", user.level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"XP: \", user.xp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Earned Badges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), earnedBadgeDetails.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No badges earned yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: earnedBadgeDetails.map(badge => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card h-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/${badge.icon}`,\n              alt: badge.name,\n              className: \"img-fluid mb-2\",\n              style: {\n                maxWidth: '80px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-title\",\n              children: badge.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: badge.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, badge.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"6hC4CKstUDTrhKBJJxIkuH95MEA=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","getUserProfile","getBadges","getToken","useNavigate","jsxDEV","_jsxDEV","ProfilePage","_s","user","setUser","allBadges","setAllBadges","error","setError","loading","setLoading","navigate","userId","fetchData","profileData","badgesData","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","earnedBadgeDetails","filter","badge","earnedBadges","includes","id","name","email","level","xp","length","map","src","icon","alt","style","maxWidth","description","_c","$RefreshReg$"],"sources":["C:/Users/Praveen/EcoChamps/client/src/pages/ProfilePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUserProfile, getBadges } from '../services/apiService';\nimport { getToken } from '../services/auth';\nimport { useNavigate } from 'react-router-dom';\n\ninterface UserProfile {\n  id: string;\n  name: string;\n  email: string;\n  level: number;\n  xp: number;\n  earnedBadges: string[];\n}\n\ninterface Badge {\n  id: string;\n  name: string;\n  description: string;\n  icon: string;\n}\n\nconst ProfilePage = () => {\n  const [user, setUser] = useState<UserProfile | null>(null);\n  const [allBadges, setAllBadges] = useState<Badge[]>([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const userId = getToken();\n\n  useEffect(() => {\n    if (!userId) {\n      navigate('/login');\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const profileData = await getUserProfile(userId);\n        const badgesData = await getBadges();\n        setUser(profileData);\n        setAllBadges(badgesData);\n      } catch (err: any) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [userId, navigate]);\n\n  if (loading) {\n    return <div className=\"text-center mt-5\">Loading profile...</div>;\n  }\n\n  if (error) {\n    return <div className=\"alert alert-danger mt-5\">Error: {error}</div>;\n  }\n\n  if (!user) {\n    return <div className=\"text-center mt-5\">User not found.</div>;\n  }\n\n  const earnedBadgeDetails = allBadges.filter(badge => user.earnedBadges.includes(badge.id));\n\n  return (\n    <div className=\"container mt-5\">\n      <h2>User Profile</h2>\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{user.name}</h5>\n          <p className=\"card-text\">Email: {user.email}</p>\n          <p className=\"card-text\">Level: {user.level}</p>\n          <p className=\"card-text\">XP: {user.xp}</p>\n        </div>\n      </div>\n\n      <h3>Earned Badges</h3>\n      {earnedBadgeDetails.length === 0 ? (\n        <p>No badges earned yet.</p>\n      ) : (\n        <div className=\"row\">\n          {earnedBadgeDetails.map(badge => (\n            <div key={badge.id} className=\"col-md-4 mb-3\">\n              <div className=\"card h-100\">\n                <div className=\"card-body text-center\">\n                  <img src={`/images/${badge.icon}`} alt={badge.name} className=\"img-fluid mb-2\" style={{ maxWidth: '80px' }} />\n                  <h6 className=\"card-title\">{badge.name}</h6>\n                  <p className=\"card-text\"><small>{badge.description}</small></p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}